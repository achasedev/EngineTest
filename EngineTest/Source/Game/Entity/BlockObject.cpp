///--------------------------------------------------------------------------------------------------------------------------------------------------
/// Author: Andrew Chase
/// Date Created: October 16th, 2021
/// Description: 
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// INCLUDES
///--------------------------------------------------------------------------------------------------------------------------------------------------
#include "Game/Entity/BlockObject.h"
#include "Engine/Core/EngineCommon.h"
#include "Engine/Render/Mesh/Mesh.h"
#include "Engine/Render/Mesh/MeshBuilder.h"
#include "Engine/Render/RenderContext.h"
#include "Engine/Resource/ResourceSystem.h"

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// DEFINES
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// ENUMS, TYPEDEFS, STRUCTS, FORWARD DECLARATIONS
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// GLOBALS AND STATICS
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// C FUNCTIONS
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// CLASS IMPLEMENTATIONS
///--------------------------------------------------------------------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------------------
BlockObject::BlockObject()
{
	m_blocks[IntVector3::ZERO] = Block();
	m_blocks[IntVector3(0, 0, 1)] = Block();
	m_blocks[IntVector3(0, 0, -1)] = Block();
	m_blocks[IntVector3(1, 0, 0)] = Block();
	m_blocks[IntVector3(-1, 0, 0)] = Block();
}


//-------------------------------------------------------------------------------------------------
void BlockObject::PreUpdate(float deltaSeconds)
{
	Entity::PreUpdate(deltaSeconds);

	if (m_blocksDirty)
	{
		UpdateMesh();
		m_blocksDirty = false;
	}
}


//-------------------------------------------------------------------------------------------------
void BlockObject::Render() const
{
	Renderable rend;
	rend.AddDraw(m_mesh, g_resourceSystem->CreateOrGetMaterial("Data/Material/debug.material"));
	rend.SetRenderableMatrix(transform.GetModelMatrix());
	g_renderContext->DrawRenderable(rend);
}


//-------------------------------------------------------------------------------------------------
void BlockObject::UpdateMesh()
{
	MeshBuilder mb;
	mb.BeginBuilding(true);

	BlockIter itr = m_blocks.begin();
	for (itr; itr != m_blocks.end(); itr++)
	{
		Vector3 center = Vector3(itr->first) * Block::BLOCK_SIZE;
		mb.PushCube(center, Vector3(Block::BLOCK_SIZE));
	}

	mb.FinishBuilding();

	if (m_mesh != nullptr)
	{
		mb.UpdateMesh<Vertex3D_PCU>(*m_mesh);
	}
	else
	{
		m_mesh = mb.CreateMesh<Vertex3D_PCU>();
	}
}
