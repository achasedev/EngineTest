///--------------------------------------------------------------------------------------------------------------------------------------------------
/// Author: Andrew Chase
/// Date Created: December 18th, 2019
/// Description: 
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
///                                                             *** INCLUDES ***
///--------------------------------------------------------------------------------------------------------------------------------------------------
#include "Game/Framework/Game.h"
#include "Engine/DirectX/Camera.h"
#include "Engine/DirectX/Mesh.h"
#include "Engine/DirectX/MeshBuilder.h"
#include "Engine/DirectX/RenderContext.h"
#include "Engine/DirectX/Shader.h"
#include "Engine/Framework/EngineCommon.h"
#include "Engine/IO/Image.h"

///--------------------------------------------------------------------------------------------------------------------------------------------------
///                                                             *** DEFINES ***
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
///                                                              *** TYPES ***
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
///                                                             *** STRUCTS ***
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
///                                                        *** GLOBALS AND STATICS ***
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
///                                                           *** C FUNCTIONS ***
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
///                                                             *** CLASSES ***
///--------------------------------------------------------------------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------------------
Game::Game()
{
	m_gameCamera = new Camera();
	
	m_shader = new Shader();
	m_shader->CreateFromFile("Data/Shader/test.shader");
	
	m_mesh = new Mesh();

	// Meshbuild a triangle
	MeshBuilder mb;
	mb.BeginBuilding(true);

	mb.SetColor(Color::RED);
	mb.SetUV(Vector2(0.f, 0.f));
	uint32 firstIndex = mb.PushVertex(Vector3(-0.5f, -0.5f, 0.0f));

	mb.SetColor(Color::GREEN);
	mb.SetUV(Vector2(0.f, 1.f));
	mb.PushVertex(Vector3(-0.5f, 0.5f, 0.0f));

	mb.SetColor(Color::BLUE);
	mb.SetUV(Vector2(1.f, 1.f));
	mb.PushVertex(Vector3(0.5f, 0.5f, 0.0f));

	mb.SetColor(Color(1.0f, 1.0f, 0.f, 1.0f));
	mb.SetUV(Vector2(1.f, 0.f));
	mb.PushVertex(Vector3(0.5f, -0.5f, 0.0f));

	mb.PushIndex(firstIndex);
	mb.PushIndex(firstIndex + 1);
	mb.PushIndex(firstIndex + 2);

	mb.PushIndex(firstIndex);
	mb.PushIndex(firstIndex + 2);
	mb.PushIndex(firstIndex + 3);

	mb.FinishBuilding();

	mb.UpdateMesh<Vertex3D_PCU>(*m_mesh);
	mb.Clear();

	m_image = new Image();
	m_image->LoadFromFile("Data/Image/test.png");
}

Game::~Game()
{
	SAFE_DELETE_POINTER(m_mesh);
	SAFE_DELETE_POINTER(m_shader);
	SAFE_DELETE_POINTER(m_gameCamera);
}

//-------------------------------------------------------------------------------------------------
void Game::Update()
{
	
}


//-------------------------------------------------------------------------------------------------
void Game::Render()
{
	RenderContext* renderContext = RenderContext::GetInstance();

	renderContext->BeginCamera(m_gameCamera);
	renderContext->Draw(*m_mesh, *m_shader);
	renderContext->EndCamera();
}